{"version":3,"sources":["components/Error.js","components/Form.js","components/Image.js","components/ImageListing.js","App.js","reportWebVitals.js","index.js"],"names":["Error","message","className","Form","setSearch","setPage","useState","term","setTerm","error","setError","onSubmit","e","preventDefault","trim","type","placeholder","onChange","target","value","Image","image","largeImageURL","likes","previewURL","tags","views","src","alt","href","rel","ImageListing","images","map","id","App","search","setImages","page","totalPages","setTotalPages","useEffect","a","imagesPerPage","url","fetch","response","json","result","hits","calculatePagesTotal","Math","ceil","totalHits","document","querySelector","scrollIntoView","behavior","callApi","onClick","newCurrentPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.03829acf.chunk.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\n\nconst Error = ({message}) => (\n        <p className=\"my-3 p-4 text-center alert alert-primary\">{message}</p>\n    )\n \nError.propTypes = {\n    message: PropTypes.string.isRequired\n}\n\nexport default Error","import React, {useState} from \"react\"\nimport PropTypes from \"prop-types\"\nimport Error from \"./Error\"\n\n\nconst Form = ({setSearch, setPage}) => {\n\n    const [term, setTerm] = useState(\"\")\n    const [error, setError] = useState(false)\n\n    const browseImages = e => {\n        e.preventDefault()\n\n        // Validate\n        if(term.trim() === \"\") {\n            setError(true)\n            return\n        }\n        setError(false)\n\n        // Send term to main component\n        setSearch(term)\n        setPage(1)\n    }\n\n    return (  \n        <form\n            onSubmit={browseImages}\n        >\n            <div className=\"row\">\n                <div className=\"form-group col-md-8\">\n                    <input \n                        type=\"text\"\n                        className=\"form-control form-control-lg\"\n                        placeholder=\"Browse for an image, example: football or coffee\"\n                        onChange={e => setTerm(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group col-md-4\">\n                    <input \n                        type=\"submit\"\n                        className=\"btn btn-lg btn-danger btn-block\"\n                        value=\"Search\"\n                    />\n                </div>\n            </div>\n            {error ? <Error message=\"Add a Search Term\" /> : null}\n        </form>\n    )\n}\n \nForm.propTypes = {\n    setSearch: PropTypes.func.isRequired,\n    setPage: PropTypes.func.isRequired\n}\n\nexport default Form","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\n\nconst Image = ({image}) => {\n\n    // Get variavbles from image\n    const {largeImageURL, likes, previewURL, tags, views} = image\n\n    return (\n        <div className=\"col-12 col-sm-6 col-md-4 col-lg-3 mb-4\">\n            <div className=\"card\">\n                <img src={previewURL} alt={tags} className=\"card-img-top\" />\n\n                <div className=\"card-body\">\n                    <p className=\"card-text\">{likes} Likes</p>\n                    <p className=\"card-text\">{views} Views</p>\n                </div>\n\n                <div className=\"card-footer\">\n                    <a\n                        href={largeImageURL}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"btn btn-primary btn-block\"\n                    >See Image</a>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nImage.propTypes = {\n    image: PropTypes.object.isRequired\n}\n \nexport default Image","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"./Image\"\n\n\nconst ImageListing = ({images}) => {\n    return (  \n        <div className=\"col-12 p-5 row\">\n            {images.map(image => (\n                <Image \n                    key={image.id}\n                    image={image}\n                />\n            ))}\n        </div>\n    )\n}\n\nImageListing.propTypes = {\n    images: PropTypes.array.isRequired\n}\n \nexport default ImageListing","import React, {useState, useEffect} from \"react\"\nimport Form from \"./components/Form\"\nimport ImageListing from \"./components/ImageListing\"\n\n\nconst App = () => {\n\n  // App State\n  const [search, setSearch] = useState(\"\")\n  const [images, setImages] = useState([])\n  const [page, setPage] = useState(1)\n  const [totalPages, setTotalPages] = useState(1)\n\n  useEffect(() => {\n\n    const callApi = async () => {\n      if(search === \"\") return\n\n      const imagesPerPage = 30\n      const key = \"9992732-3cd6d66914afb63c3c83d1922\"\n      const url = `https://pixabay.com/api/?key=${key}&q=${search}&per_page=${imagesPerPage}&page=${page}`\n\n      const response = await fetch(url)\n      const result = await response.json()\n\n      setImages(result.hits)\n\n      // Calculate the total amount of pages\n      const calculatePagesTotal = Math.ceil(result.totalHits / imagesPerPage)\n      setTotalPages(calculatePagesTotal)\n\n      // Move Screen Up\n      const jumbotron = document.querySelector(\".jumbotron\")\n      jumbotron.scrollIntoView({behavior: \"smooth\"})\n    }\n    callApi()\n  }, [search, page])\n\n  // Define Previous Page\n  const handlePreviousPage = () => {\n    const newCurrentPage = page - 1\n\n    if(newCurrentPage === 0) return\n\n    setPage(newCurrentPage)\n  }\n\n  // Define Next Page\n  const handleNextPage = () => {\n    const newCurrentPage = page + 1\n\n    if(newCurrentPage > totalPages) return\n\n    setPage(newCurrentPage)\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"jumbotron\">\n        <p className=\"lead text-center\">Image Browser</p>\n\n        <Form \n          setSearch={setSearch}\n          setPage={setPage}\n        />\n      </div>\n\n      <div className=\"row justify-content-center\">\n        <ImageListing \n          images={images}\n        />\n\n        {(page === 1) ? null : (\n          <button\n            type=\"button\"\n            className=\"bbtn btn-info mr-1\"\n            onClick={handlePreviousPage}\n          >&laquo; Previous</button>\n        )}\n\n        {(page === totalPages) ? null : (\n          <button\n            type=\"button\"\n            className=\"bbtn btn-info\"\n            onClick={handleNextPage}\n          >Next &raquo;</button>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}